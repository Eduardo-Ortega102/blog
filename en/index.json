
    
    

    
    

    
    

    
    

    
    
[{"author":"Eduardo Ortega","avatar":"hugo-logo.png","categories":["kyojin","development"],"date":"2014-09-28T00:00:00Z","formatedDate":"28 Sept 2014","image":"img/welcome.jpg","summary":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template.","title":"Creating a New Theme","uri":"https://eduardo-ortega102.github.io/blog/en/post/creating-a-new-theme/"},{"author":"Eduardo Ortega","avatar":"hugo-logo.png","categories":["tag1","development"],"date":"2014-09-26T00:00:00Z","formatedDate":"26 Sept 2014","image":"img/1.jpg","summary":"Introduction This tutorial will show you how to create a simple theme in Hugo. I assume that you are familiar with HTML, the bash command line, and that you are comfortable using Markdown to format content. I\u0026rsquo;ll explain how Hugo uses templates and how you can organize your templates to create a theme. I won\u0026rsquo;t cover using CSS to style your theme.\nWe\u0026rsquo;ll start with creating a new site with a very basic template.","title":"Awesomeness","uri":"https://eduardo-ortega102.github.io/blog/en/post/awesomeness/"},{"author":"Eduardo Ortega","avatar":"img/avatar.jpg","categories":["go","golang","hugo","development"],"date":"2014-06-02T00:00:00Z","formatedDate":"02 June 2014","image":"img/tags.jpg","summary":"Step 1. Install Hugo Goto hugo releases and download the appropriate version for your os and architecture.\nSave it somewhere specific as we will be using it in the next step.\nMore complete instructions are available at installing hugo\nStep 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.\nFollow the following steps:\n Clone the hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313  Corresponding pseudo commands:","title":"Getting Started with Hugo","uri":"https://eduardo-ortega102.github.io/blog/en/post/getting-started-with-hugo/"},{"author":"Eduardo Ortega","avatar":"img/avatar.jpg","categories":["go","golang","templates","themes","development"],"date":"2014-04-02T00:00:00Z","formatedDate":"02 Apr 2014","image":"img/writing.jpg","summary":"Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.\nThis document is a brief primer on using go templates.","title":"(Hu)go Template Primer","uri":"https://eduardo-ortega102.github.io/blog/en/post/goisforlovers/"},{"author":"Eduardo Ortega","avatar":"img/avatar.jpg","categories":null,"date":"2014-03-10T00:00:00Z","formatedDate":"10 Mar 2014","image":"img/team.jpg","summary":"Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like\n▾ \u0026lt;root\u0026gt;/ ▾ images/ logo.png  should become\n▾ \u0026lt;root\u0026gt;/ ▾ static/ ▾ images/ logo.png  Additionally, you\u0026rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.","title":"Migrate to Hugo from Jekyll","uri":"https://eduardo-ortega102.github.io/blog/en/post/migrating-from-jekyll/"}]